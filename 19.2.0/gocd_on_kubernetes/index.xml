<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GoCD User Documentation</title>
    <link>/gocd_on_kubernetes.html</link>
    <description>Recent content on GoCD User Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="/gocd_on_kubernetes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Configure the Kubernetes Elastic Agent plugin</title>
      <link>/gocd_on_kubernetes/gocd_helm_chart/configure_k8s_ea_plugin.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/gocd_on_kubernetes/gocd_helm_chart/configure_k8s_ea_plugin.html</guid>
      <description>Kubernetes elastic agent plugin  GoCD agents are &amp;ldquo;workers&amp;rdquo; and execute tasks that make up jobs, stages and the pipeline. GoCD Elastic agents spin up agents on demand, depending on the intensity of the tasks and availability of processing power.
 The Kubernetes elastic agent plugin is bundled with the GoCD Helm chart. This plugin spins up GoCD agent pods in the Kubernetes cluster in response to build workload.</description>
    </item>
    
    <item>
      <title>Configure your Kubernetes Cluster</title>
      <link>/gocd_on_kubernetes/gocd_helm_chart/configure_cluster.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/gocd_on_kubernetes/gocd_helm_chart/configure_cluster.html</guid>
      <description>Configure your Kubernetes Cluster Now that you have your Kubernetes cluster set up and running, you&amp;rsquo;ll need to make the following configuration changes. This configuration will be specific to your target Kubernetes environment. We have specified the required actions for Minikube, GKE, AWS below.
1. Enable Ingress - to be able to expose the GoCD application over your network, you will need an Ingress controller.
2. Configure Service Account - A service account is how Kubernetes manages roles and permissions.</description>
    </item>
    
    <item>
      <title>Install the GoCD Helm chart</title>
      <link>/gocd_on_kubernetes/gocd_helm_chart/helm_install.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/gocd_on_kubernetes/gocd_helm_chart/helm_install.html</guid>
      <description>Install the GoCD Helm chart Helm is a package manager for Kubernetes. Kubernetes packages are called charts. Charts are curated applications for Kubernetes.
Install the GoCD Helm chart with these commands:
helm repo add stable https://kubernetes-charts.storage.googleapis.com helm install stable/gocd --name gocd --namespace gocd Access the GoCD server After you&amp;rsquo;ve installed the GoCD helm chart, you should be able to access the GoCD server from the Ingress IP.
The Ingress IP address can be obtained as specified below:</description>
    </item>
    
    <item>
      <title>Introduction</title>
      <link>/gocd_on_kubernetes/introduction.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/gocd_on_kubernetes/introduction.html</guid>
      <description>Introduction GoCD gives you the flexibility to effectively represent CD pipelines that suit your organization&amp;rsquo;s processes. Kubernetes gives you a highly programmable delivery infrastructure platform. And together, they provide the foundation for a powerful Continuous Delivery platform.
With this documentation guide, you&amp;rsquo;ll be able to
 Setup and configure an instance of GoCD on a Kubernetes cluster. Design a continuous delivery pipeline to deploy a sample application to Kubernetes. Publish to and fetch artifacts from an external respository like Docker Hub Registry .</description>
    </item>
    
    <item>
      <title>Setup</title>
      <link>/gocd_on_kubernetes/gocd_helm_chart/setup.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/gocd_on_kubernetes/gocd_helm_chart/setup.html</guid>
      <description>Setup Before you can get started with GoCD on Kubernetes, make sure that you have taken a look at the list below.
1. Install kubectl The Kubernetes CLI kubectl is used for cluster management purposes. The Kubernetes install documentation provides various ways of installing kubectl for different platforms.
2. Setup a Kubernetes Cluster Before installing GoCD, you need to setup a Kubernetes cluster. You can do this using any of the following tools:</description>
    </item>
    
    <item>
      <title>Setup and configuration</title>
      <link>/gocd_on_kubernetes/gocd_helm_chart/setup_and_configuration.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/gocd_on_kubernetes/gocd_helm_chart/setup_and_configuration.html</guid>
      <description>Getting Started with GoCD on Kubernetes
Step 1: Setup and Configuration</description>
    </item>
    
    <item>
      <title>Troubleshooting</title>
      <link>/gocd_on_kubernetes/gocd_helm_chart/troubleshooting.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/gocd_on_kubernetes/gocd_helm_chart/troubleshooting.html</guid>
      <description>Troubleshooting  Elevated privileges error:
 User &amp;quot;system:serviceaccount:kube-system:default&amp;quot; cannot get namespaces in the namespace &amp;quot;gocd&amp;quot;: Unknown user &amp;quot;system:serviceaccount:kube-system:default&amp;quot; Error: release gocd failed: clusterroles.rbac.authorization.k8s.io &amp;quot;&amp;lt;RBAC&amp;gt;&amp;quot; is forbidden: attempt to grant extra privileges:  The above 2 error messages occur if the service account associated with the tiller pod does not have the permissions to create the resources. Refer to the privileges section in the prerequisites to provide tiller elevated privileges.</description>
    </item>
    
  </channel>
</rss>